include "../crypto/uuid.fbs";
include "../crypto/asym.fbs";

namespace protoMesh.network;

// ***
// * Message datagram.
// * Contains a path across which the payload should be sent.
// ***
table MessageDatagram {
    // ***
    // * List of nodes.
    // * All nodes in order that this datagram should traverse on its path to the destination.
    // ***
    route: [protoMesh.crypto.UUID];

    // TODO Add a way to determine which network types this should use at specific hops

    // ***
    // * Payload data
    // * Data to be delivered to the destination.
    // * It is encrypted with the shared secret between the two involved parties
    // * Non-encrypted payloads get rejected and the network enforces mutual encryption.
    // ***
    payload: [ubyte];

    // ***
    // * Anonymity level
    // * Defines the amount of hops after which the message is re-encrypted/re-wrapped.
    // * Zero means the message is not wrapped.
    // ***
    anonymity: uint = 0;

    // ***
    // * Signature
    // * Created by calculating the SHA512 hashes of:
    // * - route list
    // * - encrypted payload
    // * and applying SHA512 on the concatenated hashes which then gets signed.
    // ***
    signature: [ubyte];
}

file_identifier "MSGD";
root_type MessageDatagram;